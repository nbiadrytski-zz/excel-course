Git:
To push: git push -u origin webpack
In webstorm: Command + K to commit and Command + shift + K to push

Webpack
1. npm init -y
{
  "name": "excel-course",
  "version": "1.0.0",
  "description": "",
  "main": "webpack.config.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nbiadrytski/excel-course.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/nbiadrytski/excel-course/issues"
  },
  "homepage": "https://github.com/nbiadrytski/excel-course#readme"
}

2. npm install webpack webpack-cli --save-dev

3. In package.json update to:
"scripts": {
    "start": "webpack --mode=development",
    "build": "webpack --mode=production"
  }

4. Test scripts:
- npm run start
- npm run build  (folder dist/main.bundle.js is created with the contents of index.js)

5. Install html webpack plugin
npm install --save-dev html-webpack-plugin

6. Install copy-webpack-plugin to copy favicon.ico to dist folder
npm install copy-webpack-plugin --save-dev

7. Install sass loader
npm install sass-loader sass --save-dev

8. Install mini-css-extract-plugin
npm install --save-dev  mini-css-extract-plugin

9. install css-loader
npm install -D css-loader

10. To be compatible even with old browsers
npm install --save-dev babel-loader @babel/core

11. npm install @babel/preset-env --save-dev

12. npm i regenerator-runtime core-js@3.9.0

13. Install dev server
npm install webpack-dev-server --save-dev

14. Install linter
npm install eslint-webpack-plugin --save-dev
npm install eslint --save-dev

15. npm install @babel/eslint-parser --save-dev

16. Google style guide
npm install --save-dev eslint-config-google

17. Install eslint globally
npm i -g eslint
Auto-fix lint issues in webpack.config.js and src folder:
eslint --fix webpack.config.js src

18. npm install normalize.css
